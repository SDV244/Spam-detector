name: Spam Classifier Training

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  train:
    runs-on: ubuntu-latest
    
    services:
      mlflow-server:
        image: ghcr.io/mlflow/mlflow
        ports:
          - 5000:5000
        env:
          MLFLOW_ARTIFACT_ROOT: ./mlruns
          MLFLOW_BACKEND_STORE_URI: sqlite:///mlflow.db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pandas scikit-learn mlflow joblib

      - name: Run training
        run: |
          python train.py
          # Verificar archivos generados
          ls -la
        env:
          MLFLOW_TRACKING_URI: http://localhost:5000

      - name: Package artifacts
        run: |
          # Empaquetar solo archivos que existan
          tar -czvf mlruns.tar.gz mlruns/
          
          FILES="requirements.txt"
          [ -f spam_model.joblib ] && FILES="$FILES spam_model.joblib"
          [ -f tfidf_vectorizer.joblib ] && FILES="$FILES tfidf_vectorizer.joblib"
          [ -f training_data.csv ] && FILES="$FILES training_data.csv"
          
          tar -czvf model_files.tar.gz $FILES || echo "Algunos archivos no se encontraron"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: training-artifacts
          path: |
            mlruns.tar.gz
            model_files.tar.gz
          retention-days: 5
